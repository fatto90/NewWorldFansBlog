@using System.Globalization
@using NewWorldFansBlog.Commands.Models

@model RedditPostsViewModel
@{
    ViewData["Title"] = "Reddit Posts Page";
}

<!-- Page Header-->
<header class="masthead pb-5" style="background-image: url('img/home-bg-2.jpg')">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="site-heading">
                    <h1>New World RSS Feed</h1>
                    <span class="subheading">Latest updates from Reddit</span>
                </div>
            </div>
        </div>
    </div>
    <div class="container position-relative px-2 px-lg-3 mt-5">
        <div class="row gx-2 gx-lg-3 justify-content-center">
            <div class="col-md-10 col-lg-8">
                <p class="mb-2">Viewing: </p>
                <a class="btn btn-@(Model.SelectedFilter == PostFilterType.New ? "" : "outline-")light rounded-3 text-uppercase p-2" href="@Url.Action("Index", "RedditPosts", new { selectedFilter = PostFilterType.New })">New</a>
                <a class="btn btn-@(Model.SelectedFilter == PostFilterType.Top ? "" : "outline-")light rounded-3 text-uppercase p-2" href="@Url.Action("Index", "RedditPosts", new { selectedFilter = PostFilterType.Top })">Top</a>
                <a class="btn btn-@(Model.SelectedFilter == PostFilterType.Best ? "" : "outline-")light rounded-3 text-uppercase p-2" href="@Url.Action("Index", "RedditPosts", new { selectedFilter = PostFilterType.Best })">Best</a>
                <a class="btn btn-@(Model.SelectedFilter == PostFilterType.Hot ? "" : "outline-")light rounded-3 text-uppercase p-2" href="@Url.Action("Index", "RedditPosts", new { selectedFilter = PostFilterType.Hot })">Hot</a>
            </div>
        </div>
    </div>
</header>
<!-- Main Content-->
<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">
            @await Html.PartialAsync("../Shared/_PostListPartial",Model?.Posts.Select(post => new PostViewModel { 
                Author = post.Author,
                Date = post.Date,
                Subtitle = post.Title,
                Url = post.Url
            }).ToList())
            
            <div class="row mb-4">
                <!-- Pager-->
                <div class="col-6 col-md-4 mb-2">
                    @if(Model?.CurrentPage > 1 && Model.Posts.Count() > 1)
                    {
                       <a class="btn btn-primary text-uppercase" href="@Url.Action("Index", "RedditPosts", new { page = Model!.CurrentPage - 1, direction = DirectionType.Before, postName = Model?.Posts?[1]?.Name, selectedFilter = Model.SelectedFilter })"><span class="d-none d-sm-block">←</span> Previous Posts</a>
                    }
                </div>
                <div class="col-md-4 d-none d-sm-block"></div>
                <div class="col-6 col-md-4 d-flex justify-content-end">
                    @if(Model?.Posts?.Any() ?? false)
                    {
                        <a class="btn btn-primary text-uppercase" href="@Url.Action("Index", "RedditPosts", new { page = Model!.CurrentPage + 1, direction = DirectionType.After, postName = Model?.Posts?.LastOrDefault()?.Name, selectedFilter = Model.SelectedFilter })">Older Posts <span class="d-none d-sm-block">→</span></a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>